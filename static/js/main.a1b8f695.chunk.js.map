{"version":3,"sources":["redux/phonebook/phonebook-action.js","components/AppBar/Phonebook.module.css","redux/auth/index.js","redux/auth/auth-reduser.js","redux/auth/auth-selectors.js","redux/auth/auth-operations.js","components/ContactForm/ContactForm.module.css","redux/auth/auth-action.js","redux/phonebook/phonebook-reducer.js","redux/store.js","components/AppBar/Navigation.js","components/AppBar/UserMenu.js","components/AppBar/AuthNav.js","components/AppBar/NavBar.js","components/AppBar/PrivateRoute.js","components/AppBar/PublicRoute.js","App.js","index.js"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","module","exports","initialState","name","email","user","createReducer","authActions","registerSuccess","_","payload","loginSuccess","logoutSuccess","getCurrentUserSuccess","token","error","registerError","loginError","logoutError","getCurrentUserError","IsAuthenticated","combineReducers","getIsAuthenticated","state","auth","getUserName","axios","defaults","baseURL","headers","common","Authorization","register","credential","dispatch","a","registerRequest","post","response","console","log","data","message","login","loginRequest","logout","logoutRequest","getCurrentUser","getState","persistedToken","getCurrentUserRequest","get","contacts","filter","id","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducers","phonebook","phonebookReducer","devTools","process","persistor","persistStore","Navigation","isLoggedIn","useSelector","authSelectors","exact","to","className","s","Navlink","UserMenu","useDispatch","onLogout","useCallback","authOperations","type","onClick","AuthNav","NavBar","generalNavContainer","PrivateRoute","isAuthenticated","redirectTo","children","routeProps","PublicRoute","restricted","HomeView","lazy","LoginView","RegistrView","ContactsView","Phonebook","useEffect","container","autoClose","fallback","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1b8f695.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactRequest = createAction(\r\n  \"phonebook/fetchContactRequest\"\r\n);\r\nexport const fetchContactSuccess = createAction(\r\n  \"phonebook/fetchContactSuccess\"\r\n);\r\nexport const fetchContactError = createAction(\"phonebook/fetchContactError\");\r\n\r\nexport const addContactRequest = createAction(\"phonebook/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"phonebook/addContactSuccess\");\r\nexport const addContactError = createAction(\"phonebook/addContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"phonebook/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"phonebook/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"phonebook/deleteContactError\");\r\n\r\nexport const changeFilter = createAction(\"phonebook/changeFilter\");\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navlink\":\"Phonebook_Navlink__dxhPk\",\"generalNavContainer\":\"Phonebook_generalNavContainer__3c42z\",\"label\":\"Phonebook_label__3AQkn\",\"conteiner\":\"Phonebook_conteiner__2CwID\",\"buttonLogin\":\"Phonebook_buttonLogin__1Il3B\",\"conteinerHome\":\"Phonebook_conteinerHome__1sNk0\"};","export { default as authActions } from \"./auth-action\";\r\nexport { default as authReducers } from \"./auth-reduser\";\r\nexport { default as authOperations } from \"./auth-operations\";\r\nexport { default as authSelectors } from \"./auth-selectors\";\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport authActions from \"./auth-action\";\r\n\r\nconst initialState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst IsAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  IsAuthenticated,\r\n  token,\r\n  error,\r\n});\r\n","const getIsAuthenticated = (state) => state.auth.IsAuthenticated;\r\nconst getUserName = (state) => state.auth.user.name;\r\n\r\nexport default {\r\n  getIsAuthenticated,\r\n  getUserName,\r\n};\r\n","import axios from \"axios\";\r\nimport authActions from \"./auth-action\";\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n//  /users/signup\r\nconst register = (credential) => async (dispatch) => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post(\"/users/signup\", credential);\r\n    console.log(\"this is credential\", credential);\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n// /users/login\r\nconst login = (credential) => async (dispatch) => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post(\"/users/login\", credential);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n// /users/logout\r\nconst logout = () => async (dispatch) => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n// /users/current\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n\r\n  dispatch(authActions.getCurrentUserRequest());\r\n  try {\r\n    const response = await axios.get(\"/users/current\");\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport default { register, login, logout, getCurrentUser };\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__3ekGL\",\"form\":\"ContactForm_form__8WXZG\",\"contactList\":\"ContactForm_contactList__3xnRG\",\"btnList\":\"ContactForm_btnList__23rSN\",\"table\":\"ContactForm_table__sbELq\",\"enter\":\"ContactForm_enter__2-k9O\",\"enterActive\":\"ContactForm_enterActive__1le41\",\"exit\":\"ContactForm_exit__1S1Ls\",\"exitActive\":\"ContactForm_exitActive__rpG0s\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst registerRequest = createAction(\"auth/registerRequest\");\r\nconst registerSuccess = createAction(\"auth/registerSuccess\");\r\nconst registerError = createAction(\"auth/registerError\");\r\n\r\nconst loginRequest = createAction(\"auth/loginRequest\");\r\nconst loginSuccess = createAction(\"auth/loginSuccess\");\r\nconst loginError = createAction(\"auth/loginError\");\r\n\r\nconst logoutRequest = createAction(\"auth/logoutRequest\");\r\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nconst logoutError = createAction(\"auth/logoutError\");\r\n\r\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\r\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\r\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  changeFilter,\r\n} from \"./phonebook-action\";\r\n\r\nconst contacts = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => {\r\n    console.log(\"payload addContast\", payload);\r\n    return [...state, payload];\r\n  },\r\n  [deleteContactSuccess]: (state, { payload }) => {\r\n    return state.filter(({ id }) => id !== payload);\r\n  },\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactRequest]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport phonebookReducer from \"./phonebook/phonebook-reducer\";\r\nimport authReducers from \"./auth/auth-reduser\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducers),\r\n    phonebook: phonebookReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport authSelectors from \"../../redux/auth/auth-selectors\";\r\nimport s from \"../../components/AppBar/Phonebook.module.css\";\r\n\r\nexport default function Navigation() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <div>\r\n      <NavLink exact to=\"/\" className={s.Navlink}>\r\n        Главная\r\n      </NavLink>\r\n\r\n      {isLoggedIn && (\r\n        <NavLink exact to=\"/contacts\" className={s.Navlink}>\r\n          Контакты\r\n        </NavLink>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { authSelectors, authOperations } from \"../../redux/auth\";\r\nimport s from \"../../components/AppBar/Phonebook.module.css\";\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUserName);\r\n\r\n  const onLogout = useCallback(() => {\r\n    dispatch(authOperations.logout());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <span className={s.Navlink}>Добро пожаловать, {name}</span>\r\n      <button type=\"button\" onClick={onLogout}>\r\n        Выйти\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import { NavLink } from \"react-router-dom\";\r\nimport s from \"../../components/AppBar/Phonebook.module.css\";\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink to=\"/registration\" className={s.Navlink}>\r\n        Регистрация\r\n      </NavLink>\r\n      <NavLink to=\"/login\" className={s.Navlink}>\r\n        Авторизация\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Navigation from \"./Navigation\";\r\nimport UserMenu from \"./UserMenu\";\r\nimport AuthNav from \"./AuthNav\";\r\nimport { authSelectors } from \"../../redux/auth/\";\r\nimport s from \"../AppBar/Phonebook.module.css\";\r\n\r\nexport default function NavBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <div className={s.generalNavContainer}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { authSelectors } from \"../../redux/auth\";\r\n\r\nexport default function PrivateRoute({\r\n  isAuthenticated,\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n\r\n//  render={(props) =>\r\n//         isLoggedIn ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n//       }\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n// });\r\n\r\n// export default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { authSelectors } from \"../../redux/auth\";\r\n\r\nexport default function PublicRoute({\r\n  isAuthenticated,\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        children\r\n      )}\r\n    </Route>\r\n  );\r\n}\r\n","import React, { Suspense, lazy, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Switch } from \"react-router\";\r\nimport \"./App.css\";\r\nimport s from \"./components/ContactForm/ContactForm.module.css\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport NavBar from \"./components/AppBar/NavBar\";\r\nimport authOperations from \"./redux/auth/auth-operations\";\r\nimport PrivateRoute from \"./components/AppBar/PrivateRoute\";\r\nimport PublicRoute from \"./components/AppBar/PublicRoute\";\r\n\r\nconst HomeView = lazy(() => import(\"./components/views/HomeView\"));\r\nconst LoginView = lazy(() => import(\"./components/views/LoginView\"));\r\nconst RegistrView = lazy(() => import(\"./components/views/RegistrView\"));\r\nconst ContactsView = lazy(() => import(\"./components/views/ContactsView\"));\r\n\r\nexport default function Phonebook() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(authOperations.getCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <NavBar />\r\n      <ToastContainer autoClose={3000} />\r\n      <Suspense fallback={<p>Сейчас всё будет</p>}>\r\n        <Switch>\r\n          <PublicRoute exact path=\"/\">\r\n            <HomeView />\r\n          </PublicRoute>\r\n\r\n          <PublicRoute path=\"/registration\" restricted redirectTo=\"/contacts\">\r\n            <RegistrView />\r\n          </PublicRoute>\r\n\r\n          <PublicRoute path=\"/login\" restricted redirectTo=\"/contacts\">\r\n            <LoginView />\r\n          </PublicRoute>\r\n\r\n          <PrivateRoute exact path=\"/contacts\" redirectTo=\"/login\">\r\n            <ContactsView />\r\n          </PrivateRoute>\r\n        </Switch>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport store from \"./redux/store\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}